<?xml version="1.0" encoding="UTF-8"?>
<!--
		Use this ant script for convenience with creating a distribution of mapsforge.
		The script in not intended for building the project. Use Eclipse for this
		purpose.
	-->
<project name="mapsforge">
	<property name="mapsforge.version" value="0.1.0" />

	<property name="mapsforge.bin" value="bin" />
	<property name="mapsforge.lib" value="lib" />
	<property name="mapsforge.src" value="src" />

	<property name="mapsforge.advancemapviewer.lib.dir"
	          value="${basedir}/../AdvancedMapViewer/lib" />
	<property name="mapsforge.demomapviewer.lib.dir" value="${basedir}/../DemoMapViewer/lib" />
	
	<!-- Path to the properties file that includes the keystore parameters -->
	<property file="../mapsforge-keystore.properties" />

	<!-- List of files to be included in every distribution (JAR file) -->
	<fileset dir="." id="info" includes="COPYING, NEWS" />

	<!-- List of all JAR files in the library folder -->
	<path id="classpath">
		<fileset dir="${mapsforge.lib}">
			<include name="*.jar" />
		</fileset>
	</path>


	<!-- Build JAR files for the distribution -->
	<target name="dist" depends="mapsforge-map.jar create" />


	<!-- Delete temporary folders -->
	<target name="clean">
		<delete dir="doc" />
		<delete dir="dist" />
	</target>


	<!-- Create javadoc for the map package -->
	<target name="mapsforge-map javadoc">
		<mkdir dir="doc/${mapsforge.version}" />
		<javadoc destdir="doc/${mapsforge.version}"
		         author="false"
		         access="protected"
		         additionalparam="-quiet"
		         classpathref="classpath">
			<fileset dir="${mapsforge.src}" includes="org/mapsforge/android/map/*.java" />
			<!-- Add links to the online Android javadoc reference -->
			<link href="http://developer.android.com/reference"
			      offline="true"
			      packagelistloc="${basedir}/../../Android/android-sdk-linux_86/docs/reference" />
		</javadoc>
	</target>


	<!-- Copy the newly created map JAR file to the dependent projects -->
	<target name="mapsforge-map.jar copy" depends="mapsforge-map.jar create">
		<mkdir dir="${mapsforge.advancemapviewer.lib.dir}" />
		<mkdir dir="${mapsforge.demomapviewer.lib.dir}" />
		<copy file="dist/mapsforge-map-${mapsforge.version}.jar"
		      todir="${mapsforge.advancemapviewer.lib.dir}" />
		<copy file="dist/mapsforge-map-${mapsforge.version}.jar"
		      todir="${mapsforge.demomapviewer.lib.dir}" />
		<eclipse.refreshLocal resource="AdvancedMapViewer/lib" depth="infinite" />
		<eclipse.refreshLocal resource="DemoMapViewer/lib" depth="infinite" />
	</target>

	
	<!-- Build, sign and verify the JAR file for mapsforge-map -->
	<target name="mapsforge-map.jar create">
		<mkdir dir="dist" />
		<!-- Include source code and generated class files, avoid duplicates -->
		<jar destfile="dist/mapsforge-map-${mapsforge.version}.jar" duplicate="preserve">
			<fileset dir="${mapsforge.bin}" includes="org/mapsforge/android/map/" />
			<fileset dir="${mapsforge.src}" includes="org/mapsforge/android/map/" />
			<fileset refid="info" />
		</jar>
		<signjar jar="dist/mapsforge-map-${mapsforge.version}.jar"
		         keystore="${mapsforge.keystore.location}"
		         storepass="${mapsforge.keystore.pass}"
		         alias="${mapsforge.keystore.alias}"
		         keypass="${mapsforge.key.pass}" />
		<!-- Verify the signed JAR file and stop if verification was not successful -->
		<exec executable="jarsigner" failonerror="true">
			<arg value="-verify" />
			<arg value="dist/mapsforge-map-${mapsforge.version}.jar" />
		</exec>
	</target>
	
	<target name="mapsforge-routing.jar create">
			<mkdir dir="dist" />
			<!-- Include source code and generated class files, avoid duplicates -->
			<jar destfile="dist/mapsforge-routing-${mapsforge.version}.jar" duplicate="preserve">
				<fileset dir="${mapsforge.bin}" includes="org/mapsforge/preprocessing/graph/osm2rg/" />
				<fileset dir="${mapsforge.src}" includes="org/mapsforge/preprocessing/graph/osm2rg/" />
				<fileset dir="${mapsforge.bin}" includes="org/mapsforge/preprocessing/graph/routingGraphInterface/" />
				<fileset dir="${mapsforge.src}" includes="org/mapsforge/preprocessing/graph/routingGraphInterface/" />
				<fileset dir="${mapsforge.bin}" includes="org/mapsforge/preprocessing/routing/highwayHierarchies/" />
				<fileset dir="${mapsforge.src}" includes="org/mapsforge/preprocessing/routing/highwayHierarchies/" />
				<fileset dir="${mapsforge.bin}" includes="org/mapsforge/server/routing/IEdge.*" />
				<fileset dir="${mapsforge.src}" includes="org/mapsforge/server/routing/IEdge.*" />
				<fileset dir="${mapsforge.bin}" includes="org/mapsforge/server/routing/IVertex.*" />
				<fileset dir="${mapsforge.src}" includes="org/mapsforge/server/routing/IVertex.*" />
				<fileset dir="${mapsforge.bin}" includes="org/mapsforge/server/routing/IRouter.*" />
				<fileset dir="${mapsforge.src}" includes="org/mapsforge/server/routing/IRouter.*" />
				<fileset dir="${mapsforge.bin}" includes="org/mapsforge/server/routing/highwayHierarchies/" />
				<fileset dir="${mapsforge.src}" includes="org/mapsforge/server/routing/highwayHierarchies/" />
				<fileset dir="${mapsforge.bin}" includes="org/mapsforge/core/DBConnection.*" />
				<fileset dir="${mapsforge.src}" includes="org/mapsforge/core/DBConnection.*" />
				<fileset dir="${mapsforge.bin}" includes="org/mapsforge/core/GeoCoordinate.*" />
				<fileset dir="${mapsforge.src}" includes="org/mapsforge/core/GeoCoordinate.*" />
				<fileset dir="${mapsforge.bin}" includes="org/mapsforge/core/Rect.*" />
				<fileset dir="${mapsforge.src}" includes="org/mapsforge/core/Rect.*" />
				<fileset refid="info" />
				<manifest>
					<attribute name="Main-Class" value="org/mapsforge/preprocessing/graph/osm2rg/RgExtractor"/>
		        </manifest>
			</jar>
	</target>


	<property name="mapsforge.routingservlet.lib.dir"
	          value="${basedir}/../HHRoutingWebservice/WebContent/WEB-INF/lib" />

	<!-- Copy the newly created routing JAR file to the routing servlet project -->
	<target name="mapsforge-routing.jar copy" depends="mapsforge-routing.jar create">
		<mkdir dir="${mapsforge.routingservlet.lib.dir}" />
		<copy file="dist/mapsforge-routing-${mapsforge.version}.jar"
		      todir="${mapsforge.routingservlet.lib.dir}" />
		<eclipse.refreshLocal resource="HHRoutingWebservice" depth="infinite" />
	</target>

	<target name="build highway highrarchies routing file">
		<java fork="true" classname="org.mapsforge.preprocessing.graph.osm2rg.RgExtractor">
			<arg value="${basedir}/res/conf/osm2rg.properties" />         
			<classpath>
				<pathelement location="${mapsforge.bin}"/>
				<pathelement location="${mapsforge.lib}/postgresql-8.4-701.jdbc4.jar"/>
				<pathelement location="${mapsforge.lib}/trove-3.0.0a3.jar"/>
			</classpath>
		</java>
		<java fork="true" classname="org.mapsforge.preprocessing.routing.highwayHierarchies.HHComputation">
			<arg value="${basedir}/res/conf/hhPreprocessing.properties" />         
			<classpath>
				<pathelement location="${mapsforge.bin}"/>
				<pathelement location="${mapsforge.lib}/postgresql-8.4-701.jdbc4.jar"/>
				<pathelement location="${mapsforge.lib}/trove-3.0.0a3.jar"/>
			</classpath>
		</java>
	</target>
	
	<target name="mapsforge-poi-osmosis.jar create">
			<mkdir dir="dist" />
			<!-- Include source code and generated class files, avoid duplicates -->
			<jar destfile="dist/mapsforge-poi-osmosis-${mapsforge.version}.jar" duplicate="preserve">
				<fileset dir="${mapsforge.src}" includes="org/mapsforge/preprocessing/osmosis/poi/" />
				<fileset dir="${mapsforge.bin}" includes="org/mapsforge/preprocessing/osmosis/poi/" />
				<fileset dir="${mapsforge.src}" includes="org/mapsforge/poi/" />
				<fileset dir="${mapsforge.bin}" includes="org/mapsforge/poi/" />
				<fileset dir="${mapsforge.src}" includes="org/mapsforge/core/" />
				<fileset dir="${mapsforge.bin}" includes="org/mapsforge/core/" />
				<fileset refid="info" />
			</jar>
	</target>
	
</project>
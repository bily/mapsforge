//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, vJAXB 2.1.10 in JDK 6 
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2011.03.11 at 03:25:14 PM MEZ 
//

package org.mapsforge.preprocessing.automization;

import java.io.File;
import java.util.List;

import javax.xml.bind.JAXBElement;
import javax.xml.bind.annotation.XmlAccessType;
import javax.xml.bind.annotation.XmlAccessorType;
import javax.xml.bind.annotation.XmlAttribute;
import javax.xml.bind.annotation.XmlElementRef;
import javax.xml.bind.annotation.XmlType;

/**
 * <p>
 * Java class for pipeline complex type.
 * 
 * <p>
 * The following schema fragment specifies the expected content contained within this class.
 * 
 * <pre>
 * &lt;complexType name="pipeline">
 *   &lt;complexContent>
 *     &lt;restriction base="{http://www.w3.org/2001/XMLSchema}anyType">
 *       &lt;sequence>
 *         &lt;element ref="{http://mapsforge.org/mapsforge-preprocessing-conf}source"/>
 *       &lt;/sequence>
 *       &lt;attribute name="name" use="required" type="{http://www.w3.org/2001/XMLSchema}string" />
 *       &lt;attribute name="output-dir" type="{http://www.w3.org/2001/XMLSchema}string" />
 *       &lt;attribute name="logging-level">
 *         &lt;simpleType>
 *           &lt;restriction base="{http://www.w3.org/2001/XMLSchema}string">
 *             &lt;enumeration value="FINE"/>
 *             &lt;enumeration value="FINER"/>
 *             &lt;enumeration value="FINEST"/>
 *             &lt;enumeration value="INFO"/>
 *             &lt;enumeration value="SEVERE"/>
 *             &lt;enumeration value="WARNING"/>
 *           &lt;/restriction>
 *         &lt;/simpleType>
 *       &lt;/attribute>
 *     &lt;/restriction>
 *   &lt;/complexContent>
 * &lt;/complexType>
 * </pre>
 * 
 * 
 */
@XmlAccessorType(XmlAccessType.FIELD)
@XmlType(name = "pipeline", propOrder = { "source" })
public class Pipeline {

	/**
	 * The source of the pipeline. The point where the execution started.
	 */
	@XmlElementRef(name = "source", namespace = "http://mapsforge.org/mapsforge-preprocessing-conf", type = JAXBElement.class)
	private JAXBElement<? extends Source> source;

	/**
	 * The name of the pipeline.
	 */
	@XmlAttribute(required = true)
	private String name;

	@XmlAttribute(name = "output-dir")
	private String outputDir;
	@XmlAttribute(name = "logging-level")
	private String loggingLevel;

	/**
	 * Gets the value of the source property.
	 * 
	 * @return possible object is {@link JAXBElement }{@code <}{@link ReadPbf }{@code >}
	 *         {@link JAXBElement }{@code <}{@link Source }{@code >}
	 * 
	 */
	public JAXBElement<? extends Source> getSource() {
		return source;
	}

	/**
	 * Sets the value of the source property.
	 * 
	 * @param value
	 *            allowed object is {@link JAXBElement }{@code <}{@link ReadPbf }{@code >}
	 *            {@link JAXBElement }{@code <}{@link Source }{@code >}
	 * 
	 */
	public void setSource(JAXBElement<? extends Source> value) {
		this.source = value;
	}

	/**
	 * Gets the value of the name property.
	 * 
	 * @return possible object is {@link String }
	 * 
	 */
	public String getName() {
		return name;
	}

	/**
	 * Sets the value of the name property.
	 * 
	 * @param value
	 *            allowed object is {@link String }
	 * 
	 */
	public void setName(String value) {
		this.name = value;
	}

	/**
	 * Gets the value of the outputDir property.
	 * 
	 * @return possible object is {@link String }
	 * 
	 */
	public String getOutputDir() {
		return outputDir;
	}

	/**
	 * Sets the value of the outputDir property.
	 * 
	 * @param value
	 *            allowed object is {@link String }
	 * 
	 */
	public void setOutputDir(String value) {
		this.outputDir = value;
		System.out.println("set outputdir");

	}

	/**
	 * Gets the value of the loggingLevel property.
	 * 
	 * @return possible object is {@link String }
	 * 
	 */
	public String getLoggingLevel() {
		return loggingLevel;
	}

	/**
	 * Sets the value of the loggingLevel property.
	 * 
	 * @param value
	 *            allowed object is {@link String }
	 * 
	 */
	public void setLoggingLevel(String value) {
		this.loggingLevel = value;
	}

	public String generate(List<String> md5List, String absoluteWorkingDirPath,
			String absoluteOutputDirPath) {

		// TODO: DEBUG
		System.out
				.println("DEBUG: Pipeline: absoluteWorkingDirPath: " + absoluteWorkingDirPath);
		System.out.println("DEBUG: Pipeline: absoluteOutputDirPath: " + absoluteOutputDirPath);
		System.out.println("DEBUG: Pipeline: outputDir: " + outputDir);
		if (outputDir != null) {
			// check if output directory of pipeline is absolute
			if (outputDir.startsWith(File.separator)) {
				// output directory of pipeline is absolute, so this would be used
				return source.getValue().generate(md5List, absoluteWorkingDirPath, outputDir);
			}
			// output directory is relative path, so it would be added to the given absolute
			// path of the configuration output directory
			return source.getValue().generate(md5List, absoluteWorkingDirPath,
					absoluteOutputDirPath + File.separator + outputDir);
		}

		// output directory of pipeline is not set, so wie use the default output directory of
		// the xml file
		return source.getValue().generate(md5List, absoluteWorkingDirPath,
				absoluteOutputDirPath);
	}

}

//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, vJAXB 2.1.10 in JDK 6 
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2011.03.11 at 03:25:14 PM MEZ 
//


package org.mapsforge.preprocessing.automization;

import javax.xml.bind.JAXBElement;
import javax.xml.bind.annotation.XmlElementDecl;
import javax.xml.bind.annotation.XmlRegistry;
import javax.xml.namespace.QName;


/**
 * This object contains factory methods for each 
 * Java content interface and Java element interface 
 * generated in the org.mapsforge.preprocessing.automization package. 
 * <p>An ObjectFactory allows you to programatically 
 * construct new instances of the Java representation 
 * for XML content. The Java representation of XML 
 * content can consist of schema derived interfaces 
 * and classes representing the binding of schema 
 * type definitions, element declarations and model 
 * groups.  Factory methods for each of these are 
 * provided in this class.
 * 
 */
@XmlRegistry
public class ObjectFactory {

    private final static QName _PolygonAreaFilter_QNAME = new QName("http://mapsforge.org/mapsforge-preprocessing-conf", "polygon-area-filter");
    private final static QName _Sink_QNAME = new QName("http://mapsforge.org/mapsforge-preprocessing-conf", "sink");
    private final static QName _MapfileWriter_QNAME = new QName("http://mapsforge.org/mapsforge-preprocessing-conf", "mapfile-writer");
    private final static QName _BboxAreaFilter_QNAME = new QName("http://mapsforge.org/mapsforge-preprocessing-conf", "bbox-area-filter");
    private final static QName _Configuration_QNAME = new QName("http://mapsforge.org/mapsforge-preprocessing-conf", "configuration");
    private final static QName _ReadPbf_QNAME = new QName("http://mapsforge.org/mapsforge-preprocessing-conf", "read-pbf");
    private final static QName _WritePbf_QNAME = new QName("http://mapsforge.org/mapsforge-preprocessing-conf", "write-pbf");
    private final static QName _RoutinggraphWriter_QNAME = new QName("http://mapsforge.org/mapsforge-preprocessing-conf", "routinggraph-writer");
    private final static QName _SinkSource_QNAME = new QName("http://mapsforge.org/mapsforge-preprocessing-conf", "sink-source");
    private final static QName _Source_QNAME = new QName("http://mapsforge.org/mapsforge-preprocessing-conf", "source");

    /**
     * Create a new ObjectFactory that can be used to create new instances of schema derived classes for package: org.mapsforge.preprocessing.automization
     * 
     */
    public ObjectFactory() {
    }

    /**
     * Create an instance of {@link Pipeline }
     * 
     */
    public Pipeline createPipeline() {
        return new Pipeline();
    }

    /**
     * Create an instance of {@link RoutinggraphWriter }
     * 
     */
    public RoutinggraphWriter createRoutinggraphWriter() {
        return new RoutinggraphWriter();
    }

    /**
     * Create an instance of {@link ReadPbf }
     * 
     */
    public ReadPbf createReadPbf() {
        return new ReadPbf();
    }

    /**
     * Create an instance of {@link Configuration }
     * 
     */
    public Configuration createConfiguration() {
        return new Configuration();
    }

    /**
     * Create an instance of {@link MapfileWriter }
     * 
     */
    public MapfileWriter createMapfileWriter() {
        return new MapfileWriter();
    }

    /**
     * Create an instance of {@link WritePbf }
     * 
     */
    public WritePbf createWritePbf() {
        return new WritePbf();
    }

    /**
     * Create an instance of {@link PolygonAreaFilter }
     * 
     */
    public PolygonAreaFilter createPolygonAreaFilter() {
        return new PolygonAreaFilter();
    }

    /**
     * Create an instance of {@link BboxAreaFilter }
     * 
     */
    public BboxAreaFilter createBboxAreaFilter() {
        return new BboxAreaFilter();
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link PolygonAreaFilter }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "http://mapsforge.org/mapsforge-preprocessing-conf", name = "polygon-area-filter", substitutionHeadNamespace = "http://mapsforge.org/mapsforge-preprocessing-conf", substitutionHeadName = "sink-source")
    public JAXBElement<PolygonAreaFilter> createPolygonAreaFilter(PolygonAreaFilter value) {
        return new JAXBElement<PolygonAreaFilter>(_PolygonAreaFilter_QNAME, PolygonAreaFilter.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link Sink }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "http://mapsforge.org/mapsforge-preprocessing-conf", name = "sink")
    public JAXBElement<Sink> createSink(Sink value) {
        return new JAXBElement<Sink>(_Sink_QNAME, Sink.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link MapfileWriter }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "http://mapsforge.org/mapsforge-preprocessing-conf", name = "mapfile-writer", substitutionHeadNamespace = "http://mapsforge.org/mapsforge-preprocessing-conf", substitutionHeadName = "sink")
    public JAXBElement<MapfileWriter> createMapfileWriter(MapfileWriter value) {
        return new JAXBElement<MapfileWriter>(_MapfileWriter_QNAME, MapfileWriter.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link BboxAreaFilter }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "http://mapsforge.org/mapsforge-preprocessing-conf", name = "bbox-area-filter", substitutionHeadNamespace = "http://mapsforge.org/mapsforge-preprocessing-conf", substitutionHeadName = "sink-source")
    public JAXBElement<BboxAreaFilter> createBboxAreaFilter(BboxAreaFilter value) {
        return new JAXBElement<BboxAreaFilter>(_BboxAreaFilter_QNAME, BboxAreaFilter.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link Configuration }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "http://mapsforge.org/mapsforge-preprocessing-conf", name = "configuration")
    public JAXBElement<Configuration> createConfiguration(Configuration value) {
        return new JAXBElement<Configuration>(_Configuration_QNAME, Configuration.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link ReadPbf }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "http://mapsforge.org/mapsforge-preprocessing-conf", name = "read-pbf", substitutionHeadNamespace = "http://mapsforge.org/mapsforge-preprocessing-conf", substitutionHeadName = "source")
    public JAXBElement<ReadPbf> createReadPbf(ReadPbf value) {
        return new JAXBElement<ReadPbf>(_ReadPbf_QNAME, ReadPbf.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link WritePbf }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "http://mapsforge.org/mapsforge-preprocessing-conf", name = "write-pbf", substitutionHeadNamespace = "http://mapsforge.org/mapsforge-preprocessing-conf", substitutionHeadName = "sink")
    public JAXBElement<WritePbf> createWritePbf(WritePbf value) {
        return new JAXBElement<WritePbf>(_WritePbf_QNAME, WritePbf.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link RoutinggraphWriter }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "http://mapsforge.org/mapsforge-preprocessing-conf", name = "routinggraph-writer", substitutionHeadNamespace = "http://mapsforge.org/mapsforge-preprocessing-conf", substitutionHeadName = "sink")
    public JAXBElement<RoutinggraphWriter> createRoutinggraphWriter(RoutinggraphWriter value) {
        return new JAXBElement<RoutinggraphWriter>(_RoutinggraphWriter_QNAME, RoutinggraphWriter.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link SinkSource }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "http://mapsforge.org/mapsforge-preprocessing-conf", name = "sink-source")
    public JAXBElement<SinkSource> createSinkSource(SinkSource value) {
        return new JAXBElement<SinkSource>(_SinkSource_QNAME, SinkSource.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link Source }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "http://mapsforge.org/mapsforge-preprocessing-conf", name = "source")
    public JAXBElement<Source> createSource(Source value) {
        return new JAXBElement<Source>(_Source_QNAME, Source.class, null, value);
    }

}

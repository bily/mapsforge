//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, vJAXB 2.1.10 in JDK 6 
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2011.03.11 at 03:25:14 PM MEZ 
//

package org.mapsforge.preprocessing.automization;

import javax.xml.bind.annotation.XmlAccessType;
import javax.xml.bind.annotation.XmlAccessorType;
import javax.xml.bind.annotation.XmlAttribute;
import javax.xml.bind.annotation.XmlType;

/**
 * <p>
 * Java class for write-pbf complex type.
 * 
 * <p>
 * The following schema fragment specifies the expected content contained within this class.
 * 
 * <pre>
 * &lt;complexType name="write-pbf">
 *   &lt;complexContent>
 *     &lt;extension base="{http://mapsforge.org/mapsforge-preprocessing-conf}sink">
 *       &lt;attribute name="omit-metadata" type="{http://www.w3.org/2001/XMLSchema}boolean" default="false" />
 *       &lt;attribute name="compress" type="{http://www.w3.org/2001/XMLSchema}boolean" default="true" />
 *     &lt;/extension>
 *   &lt;/complexContent>
 * &lt;/complexType>
 * </pre>
 * 
 * 
 */
@XmlAccessorType(XmlAccessType.FIELD)
@XmlType(name = "write-pbf")
public class WritePbf
		extends Sink {

	/**
	 * This parameter defines if the osm meta data should be transfered into the written pbf
	 * file or if the are filtered.
	 */
	@XmlAttribute(name = "omit-metadata")
	protected Boolean omitMetadata;

	/**
	 * This parameter defines if the deflate or no compression method should use for writing the
	 * pbf file.
	 */
	@XmlAttribute
	protected Boolean compress;

	/**
	 * Gets the value of the omitMetadata property.
	 * 
	 * @return possible object is {@link Boolean }
	 * 
	 */
	public boolean getOmitMetadata() {
		if (omitMetadata == null) {
			return false;
		}
		return omitMetadata;
	}

	/**
	 * Sets the value of the omitMetadata property.
	 * 
	 * @param value
	 *            allowed object is {@link Boolean }
	 * 
	 */
	public void setOmitMetadata(Boolean value) {
		this.omitMetadata = value;
	}

	/**
	 * Gets the value of the compress property.
	 * 
	 * @return possible object is {@link Boolean }
	 * 
	 */
	public boolean getCompress() {
		if (compress == null) {
			return true;
		}
		return compress;
	}

	/**
	 * Sets the value of the compress property.
	 * 
	 * @param value
	 *            allowed object is {@link Boolean }
	 * 
	 */
	public void setCompress(Boolean value) {
		this.compress = value;
	}

	@Override
	public String generate() {
		StringBuilder sb = new StringBuilder();
		sb.append("--wb").append(" ");
		sb.append("file=").append(file).append(" ");

		sb.append("compress=");
		if (getCompress())
			sb.append("deflate");
		else
			sb.append("none");
		sb.append(" ");

		sb.append("omitmetadata=");
		if (getOmitMetadata())
			sb.append("true");
		else
			sb.append("false");
		sb.append(" ");

		return sb.toString();
	}

}
